{"version":3,"sources":["views/config.js/baseUrl.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Hospital/Hospitals List/Hospitals List.js"],"names":["exports","baseUrl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Hospital_List","useState","valueData","setvalueData","resultDAta","a","axios","get","headers","Authorization","localStorage","getItem","result","data","useEffect","contacts","setContacts","hospitalName","hospitalLocation","latitude","longitude","alldoctors","allbeds","ambulances","editFormData","editContactId","setEditContactId","className","class","onSubmit","event","preventDefault","editedContact","id","newContacts","findIndex","contact","style","paddingTop","marginLeft","width","length","map","value","hospitalCode","hospitalType","hospitalAddress","city","state","phone","numberOfBeds"],"mappings":"sGAAAA,EAAQC,QAAU,oC,6FCIH,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,K,mJIwG/EC,UAtGO,WACpB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,IAAInB,UAAU,eAAgB,CACvDoB,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,YAHnC,OACXC,EADW,OAMjBT,EAAaS,EAAOC,MANH,2CAAH,qDAQhBC,qBAAU,WACRV,MACC,IAEH,MAAgCH,mBAASC,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAwCf,mBAAS,CAC/CgB,aAAc,IACdC,iBAAkB,IAClBC,SAAU,IACVC,UAAW,IACXC,WAAY,IACZC,QAAS,IACTC,WAAY,MAPd,mBAAOC,EAAP,KASA,GATA,KAS0CvB,mBAAS,OAAnD,mBAAOwB,EAAP,KAAsBC,EAAtB,KAgBA,OACE,mCACE,8BACE,yBAASC,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,kDAEF,qBAAKC,MAAM,wBAAX,SACE,sBAAMC,SA1BK,SAACC,GAC5BA,EAAMC,iBACN,IAAMC,EAAgB,CACpBC,GAAIR,EACJR,aAAcO,EAAaP,aAC3BC,iBAAkBM,EAAaN,kBAE3BgB,EAAW,YAAOnB,GAExBmB,EADcnB,EAASoB,WAAU,SAACC,GAAD,OAAaA,EAAQH,KAAOR,MACxCO,EACrBhB,EAAYkB,GACZR,EAAiB,OAeD,SACE,wBAAOE,MAAM,4EAAb,UACE,gCACE,qBACED,UAAU,eACVU,MAAO,CACLC,WAAY,OACZC,WAAY,OACZC,MAAO,OALX,UAQE,+CACA,+CACA,+CACA,kDACA,sCACA,uCACA,uCACA,qDAGJ,0BACA,uBAAOH,MAAO,CAAEG,MAAO,OAAvB,SACwB,IAArBtC,EAAUuC,QACTvC,EAAUwC,KAAI,SAACC,GAAD,OACZ,+BACE,6BAAKA,EAAM1B,eACX,6BAAK0B,EAAMC,eACX,6BAAKD,EAAME,eACX,6BAAKF,EAAMG,kBACX,6BAAKH,EAAMI,OACX,6BAAKJ,EAAMK,QACX,6BAAKL,EAAMM,QACX,6BAAKN,EAAMO","file":"static/js/30.1daba356.chunk.js","sourcesContent":["exports.baseUrl = \"https://ehospi-app.herokuapp.com\"","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport 'src/asset/plugins/bootstrap/css/bootstrap.min.css';\r\nimport 'src/asset/css/main.css';\r\nimport { baseUrl } from 'src/views/config.js/baseUrl';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Hospital_List = () => {\r\n  const [valueData, setvalueData] = useState([]);\r\n\r\n  const resultDAta = async () => {\r\n    const result = await axios.get(baseUrl + '/getHospital', {\r\n      headers: {\r\n        Authorization: `Bearer ` + localStorage.getItem('token'),\r\n      },\r\n    });\r\n    setvalueData(result.data);\r\n  };\r\n  useEffect(() => {\r\n    resultDAta();\r\n  }, []);\r\n\r\n  const [contacts, setContacts] = useState(valueData);\r\n  const [editFormData, setEditFormData] = useState({\r\n    hospitalName: ' ',\r\n    hospitalLocation: ' ',\r\n    latitude: ' ',\r\n    longitude: ' ',\r\n    alldoctors: ' ',\r\n    allbeds: ' ',\r\n    ambulances: ' ',\r\n  });\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const editedContact = {\r\n      id: editContactId,\r\n      hospitalName: editFormData.hospitalName,\r\n      hospitalLocation: editFormData.hospitalLocation,\r\n    };\r\n    const newContacts = [...contacts];\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n    newContacts[index] = editedContact;\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12 \">\r\n                <div className=\"card\">\r\n                  <div className=\"header\">\r\n                    <h2>Hospitals List</h2>\r\n                  </div>\r\n                  <div class=\"body table-responsive\">\r\n                    <form onSubmit={handleEditFormSubmit}>\r\n                      <table class=\"table table-bordered table-striped table-hover js-basic-example dataTable\">\r\n                        <thead>\r\n                          <tr\r\n                            className=\"tablepatient\"\r\n                            style={{\r\n                              paddingTop: '30px',\r\n                              marginLeft: '30px',\r\n                              width: '5px',\r\n                            }}\r\n                          >\r\n                            <th>Hospital Name</th>\r\n                            <th>Hospital Code</th>\r\n                            <th>Hospital Type</th>\r\n                            <th>Hospital Address</th>\r\n                            <th>City</th>\r\n                            <th>State</th>\r\n                            <th>Phone</th>\r\n                            <th>Number of beds</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tfoot></tfoot>\r\n                        <tbody style={{ width: '5px' }}>\r\n                          {valueData.length !== 0 &&\r\n                            valueData.map((value) => (\r\n                              <tr>\r\n                                <td>{value.hospitalName}</td>\r\n                                <td>{value.hospitalCode}</td>\r\n                                <td>{value.hospitalType}</td>\r\n                                <td>{value.hospitalAddress}</td>\r\n                                <td>{value.city}</td>\r\n                                <td>{value.state}</td>\r\n                                <td>{value.phone}</td>\r\n                                <td>{value.numberOfBeds}</td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Hospital_List;\r\n"],"sourceRoot":""}