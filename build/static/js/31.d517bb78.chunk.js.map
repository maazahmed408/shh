{"version":3,"sources":["views/config.js/baseUrl.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Hospital/Pending Hospital/Pending Hospital.js"],"names":["exports","baseUrl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","toast","configure","Pending_List","useState","valueData","setvalueData","result1","setresult1","r","setr","resultDAta","a","axios","get","headers","Authorization","localStorage","getItem","result","data","useEffect","add","id","post","hospitalName","hospitalCode","hospitalAddress","hospitalType","city","state","phone","numberOfBeds","success","autoClose","childaction","Accept","put","answer","window","confirm","console","log","childaction2","Reject","contacts","setContacts","editFormData","editContactId","setEditContactId","className","class","onSubmit","event","preventDefault","editedContact","hospitalLocation","newContacts","findIndex","contact","style","paddingTop","marginLeft","width","length","map","value","status","textAlign","onClick","color","icon","faCheck","faCircleXmark"],"mappings":"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","file":"static/js/31.d517bb78.chunk.js","sourcesContent":["exports.baseUrl = \"https://ehospi-app.herokuapp.com\"","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport 'src/asset/plugins/bootstrap/css/bootstrap.min.css';\r\nimport 'src/asset/css/main.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faCircleXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { baseUrl } from 'src/views/config.js/baseUrl';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nconst Pending_List = () => {\r\n  const [valueData, setvalueData] = useState([]);\r\n  const [result1, setresult1] = useState([]);\r\n  const [r, setr] = useState(0);\r\n  const resultDAta = async () => {\r\n    const result = await axios.get(baseUrl + '/admin/signupPendingHospital', {\r\n      headers: {\r\n        Authorization: `Bearer ` + localStorage.getItem('token'),\r\n      },\r\n    });\r\n    setresult1(result.data);\r\n    setvalueData(result.data);\r\n  };\r\n  useEffect(() => {\r\n    resultDAta();\r\n  }, [r]);\r\n  const add = async (id) => {\r\n    let result12 = await axios.post(\r\n      baseUrl + '/addHospital',\r\n      {\r\n        hospitalName: id.hospitalName,\r\n        hospitalCode: id.hospitalCode,\r\n        hospitalAddress: id.hospitalAddress,\r\n        hospitalType: id.hospitalType,\r\n        city: id.city,\r\n        state: id.state,\r\n        phone: id.phone,\r\n        numberOfBeds: id.numberOfBeds,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ` + localStorage.getItem('token'),\r\n        },\r\n      },\r\n    );\r\n    if (result12) {\r\n      toast.success('Hospital added to database successfully', {\r\n        autoClose: 600,\r\n      });\r\n    }\r\n  };\r\n  const childaction = async (id) => {\r\n    const Accept = async () => {\r\n      const result = await axios.put(\r\n        baseUrl + '/admin/accept/signupHospital',\r\n        { hospitalCode: id.hospitalCode },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ` + localStorage.getItem('token'),\r\n          },\r\n        },\r\n      );\r\n      if (result) {\r\n        toast.success('Request accepted successfully', { autoClose: 600 });\r\n        setr(r + 1);\r\n        add(id);\r\n      }\r\n    };\r\n\r\n    var answer = window.confirm(\r\n      'Are you sure? You want to accept: ' + id.hospitalCode,\r\n    );\r\n    console.log(answer);\r\n    if (answer) {\r\n      Accept();\r\n    }\r\n  };\r\n  const childaction2 = async (id) => {\r\n    const Reject = async () => {\r\n      const result = await axios.put(\r\n        baseUrl + '/admin/reject/signupHospital',\r\n        { hospitalCode: id.hospitalCode },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ` + localStorage.getItem('token'),\r\n          },\r\n        },\r\n      );\r\n      if (result) {\r\n        setr(r + 1);\r\n        toast.success('Request rejected successfully', { autoClose: 600 });\r\n      }\r\n    };\r\n    var answer = window.confirm(\r\n      'Are you sure? You want to reject: ' + id.hospitalCode,\r\n    );\r\n    if (answer) {\r\n      Reject();\r\n    }\r\n  };\r\n\r\n  const [contacts, setContacts] = useState(valueData);\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    hospitalName: ' ',\r\n    hospitalCode: ' ',\r\n    hospitalType: ' ',\r\n    hospitalAddress: ' ',\r\n    city: ' ',\r\n    state: ' ',\r\n    phone: ' ',\r\n  });\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const editedContact = {\r\n      id: editContactId,\r\n      hospitalName: editFormData.hospitalName,\r\n      hospitalLocation: editFormData.hospitalLocation,\r\n    };\r\n    const newContacts = [...contacts];\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n    newContacts[index] = editedContact;\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"col-lg-12 col-md-12 col-sm-12 \">\r\n                <div className=\"card\">\r\n                  <div className=\"header\">\r\n                    <h2>Pending Hospitals List</h2>\r\n                  </div>\r\n                  <div class=\"body table-responsive\">\r\n                    <form onSubmit={handleEditFormSubmit}>\r\n                      <table class=\"table table-bordered table-striped table-hover js-basic-example dataTable1\">\r\n                        <tbody\r\n                          style={{\r\n                            paddingTop: '30px',\r\n                            marginLeft: '30px',\r\n                            width: '10px',\r\n                          }}\r\n                        >\r\n                          <tr\r\n                            style={{\r\n                              paddingTop: '30px',\r\n                              marginLeft: '30px',\r\n                              width: '10px',\r\n                            }}\r\n                          >\r\n                            <th>Hospital Name</th>\r\n                            <th>Hospital Code</th>\r\n                            <th>Hospital Type</th>\r\n                            <th>Hospital Address</th>\r\n                            <th>City</th>\r\n                            <th>State</th>\r\n                            <th>Phone</th>\r\n                            <th>Status</th>\r\n                            <th>Action</th>\r\n                          </tr>\r\n                          {result1.length !== 0 &&\r\n                            valueData.map((value) => (\r\n                              <tr>\r\n                                <td>{value.hospitalName}</td>\r\n                                <td>{value.hospitalCode}</td>\r\n                                <td>{value.hospitalType}</td>\r\n                                <td>{value.hospitalAddress}</td>\r\n                                <td>{value.city}</td>\r\n                                <td>{value.state}</td>\r\n                                <td>{value.phone}</td>\r\n                                <td>{value.status}</td>\r\n                                <td style={{ textAlign: 'right' }}>\r\n                                  <button\r\n                                    onClick={() => childaction(value)}\r\n                                    className=\"btn btn-xm px-1 py-1 btn btn-xm\"\r\n                                  >\r\n                                    <FontAwesomeIcon\r\n                                      style={{ color: 'green' }}\r\n                                      icon={faCheck}\r\n                                    />\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={() => childaction2(value)}\r\n                                    className=\"btn btn-xm px-0 py-1 btn btn-xm text-align left\"\r\n                                  >\r\n                                    <FontAwesomeIcon\r\n                                      style={{ color: 'red' }}\r\n                                      icon={faCircleXmark}\r\n                                    />\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Pending_List;\r\n"],"sourceRoot":""}